swagger: '2.0'
info:
  title: Mobile API
  description: All API requests must have the `Content-Type` and `Accept` HTTP headers set to `application/json`.
  version: 1.0.0
host: ekcoffee2-3000.terminal.com
schemes:
  - https
basePath: /v1
produces:
  - application/json
consumes:
  - application/json
tags:
  - name: Profiles
    description: User profile
  - name: Photos
    description: Profile photos
  - name: Matches
    description: Profile matches
  - name: Conversations
    description: User conversations
  - name: Messages
    description: Conversation messages
  - name: Accounts
    description: Account settings

# *********************** PATHS ****************************

paths:
  # ************************** Profiles
  /profiles:
    post:
      tags:
        - Profiles
      summary: Create Profile/New User Signup
      description: The parameters required to create a new profile should include the full Facebook OAuth response object.
      parameters:
        - name: body
          in: body
          description: Parameters for profile to be created
          required: true
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
                required:
                  - facebook_auth_hash
                  - intent
                  - date_preferences
                  - longitude
                  - latitude
                properties:
                  facebook_auth_hash:
                    description: full response object from auth provider
                    type: object
                  intent:
                    description: dating intention
                    type: string
                    enum:
                      - Dating
                      - Relationship
                  date_preferences:
                    description: first date preferences
                    type: array
                    items:
                      type: string
                  latitude:
                    description: latitude as on profile
                    type: number
                    format: double
                  longitude:
                    description: longitude as on profile
                    type: number
                    format: double
      responses:
        201:
          description: Profile created
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  _meta:
                    type: object
                  item:
                    $ref: '#/definitions/Profile'
              auth:
                $ref: '#/definitions/AuthToken'
        400:
          description: Validation failed. Bad data.
          schema:
            $ref: '#/definitions/400'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
    get:
      tags:
        - Profiles
      summary: Get featured people in a city
      parameters:
        - name: latitude
          in: query
          description: latitude of the requesting user
          type: number
          format: double
          required: true
          allowEmptyValue: false
        - name: longitude
          in: query
          description: longitude of the requesting user
          type: number
          format: double
          required: true
          allowEmptyValue: false
        - name: show
          in: query
          description: parameter to filter profiles
          type: string
          required: true
          allowEmptyValue: false
          enum:
            - featured
      responses:
        200:
          description: Featured people
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  _meta:
                    type: object
                    properties:
                      city:
                        type: string
                  items:
                    type: array
                    items:
                      $ref: '#/definitions/FeaturedProfile'
        404:
          description: No profiles found
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
  /profiles/:uuid:
    delete:
      tags:
        - Profiles
      summary: Delete Profile/User Account
      description: This is effectively a 'delete account' method. The app should log the user out upon successful response.
      parameters:
        - name: body
          in: body
          description: delete reason
          required: true
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
                properties:
                  reason:
                    description: reason to delete their profile
                    type: string
      responses:
        200:
          description: Deleted profile/account
          schema:
            $ref: '#/definitions/200_nodata'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
    get:
      tags:
        - Profiles
      summary: Get profile details for a user
      responses:
        200:
          description: Profile details
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  _meta:
                    type: object
                  item:
                    $ref: '#/definitions/Profile'
              auth:
                $ref: '#/definitions/AuthToken'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
    patch:
      tags:
        - Profiles
      summary: Update Profile
      parameters:
        - name: body
          in: body
          description: properties to be updated
          required: true
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Profile'
      responses:
        200:
          description: Updated profile
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  _meta:
                    type: object
                  item:
                    $ref: '#/definitions/Profile'
              auth:
                $ref: '#/definitions/AuthToken'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
  /profiles/:uuid/sign-out:
    post:
      tags:
        - Profiles
      summary: Logout the user
      description: Logout the user
      responses:
        200:
          description: User logged out
          schema:
            type: object
            properties:
              data:
                type: object
              auth:
                $ref: '#/definitions/AuthToken'
              state_data:
                type: object
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
  /profiles/:uuid/deactivate:
    post:
      tags:
        - Profiles
      summary: Deactivate the user account
      description: Deactivate the user account
      parameters:
        - name: body
          in: body
          description: reason for deactivating
          required: true
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
                required:
                  - reason
                properties:
                  reason:
                    type: string
                    enum:
                      - I am seeing someone now
                      - I need a break for some time
                      - I'm busy with other things
                      - Other
      responses:
        200:
          description: User account deactivated
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/Profile'
              auth:
                $ref: '#/definitions/AuthToken'
              state_data:
                type: object
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
  /profiles/:uuid/activate:
    post:
      tags:
        - Profiles
      summary: Activate the user account
      description: Activate the user account
      responses:
        200:
          description: User account activated
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/Profile'
              auth:
                $ref: '#/definitions/AuthToken'
              state_data:
                type: object
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
  /sign-in:
    post:
      tags:
        - Profiles
      summary: Login an existing user
      description: Login existing user with their FB credentials
      parameters:
        - name: body
          in: body
          description: full auth hash from FB login response
          required: true
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
                required:
                  - facebook_auth_hash
                properties:
                  facebook_auth_hash:
                    description: full omniauth hash from facebook
                    type: object
      responses:
        200:
          description: Sign in successful
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  _meta:
                    type: object
                  item:
                    $ref: '#/definitions/Profile'
              auth:
                $ref: '#/definitions/AuthToken'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
  /waiting-list:
    post:
      tags:
        - Profiles
      summary: Adds the user to the launch waiting list
      description: In cities where ekcoffee hasn't launched, this builds a waiting list
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
                required:
                  - latitude
                  - longitude
                  - phone
                properties:
                  latitude:
                    description: user's latitude
                    type: number
                    format: double
                  longitude:
                    description: user's longitude
                    type: number
                    format: double
                  phone:
                    description: user's mobile number
                    type: string
      responses:
        200:
          description: successfully added to waiting list
        400:
          description: Bad data
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server Error
          schema:
            $ref: '#/definitions/500'

  /profiles/:uuid/state:
    get:
      tags:
        - Profiles
      summary: Get user state
      description: Returns the user state string and API to hit based on state (may be null)
      responses:
        200:
          description: successfully got state
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/State'
              auth:
                $ref: '#/definitions/AuthToken'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
  /profiles/report:
    post:
      tags:
        - Profiles
      summary: Report this profile
      description: Report this profile
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
                required:
                  - reported_profile_uuid
                  - reason
                  - match_id
                properties:
                  reported_profile_uuid:
                    type: string
                    format: uuid
                  reason:
                    type: string
                    enum:
                      - Inappropriate talk
                      - Inappropriate offline behavior
                      - Person is married
                      - False information on profile
                      - Something else
                  match_id:
                    type: integer
                    format: int64
      responses:
        200:
          description: successfully reported profile
          schema:
            $ref: '#/definitions/200_nodata'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        404:
          description: Reported profile not found
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'

  # ************************** Photos

  /profiles/:profile_uuid/photos:
    post:
      tags:
        - Photos
      summary: Add new photo to profile
      parameters:
        - name: body
          in: body
          description: parameters to add new photo
          required: true
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
                properties:
                  facebook_id:
                    type: string
                    description: facebook photo id
                  primary:
                    type: boolean
                    description: is this a primary photo?
      responses:
        201:
          description: Photo created
          schema:
            type: object
            description: all photos
            properties:
              data:
                type: object
                properties:
                  _meta:
                    $ref: '#/definitions/PhotoMeta'
                  items:
                    type: array
                    items:
                      $ref: '#/definitions/Photo'
              auth:
                $ref: '#/definitions/AuthToken'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
    get:
      tags:
        - Photos
      summary: Get all profile photos
      responses:
        200:
          description: all photos
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  _meta:
                    $ref: '#/definitions/PhotoMeta'
                  items:
                    type: array
                    items:
                      $ref: '#/definitions/Photo'
              auth:
                $ref: '#/definitions/AuthToken'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
  /profiles/:profile_uuid/photos/:id:
    delete:
      tags:
        - Photos
      summary: Delete photo
      responses:
        200:
          description: successfully deleted photo
          schema:
            $ref: '#/definitions/200_nodata'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
    get:
      tags:
        - Photos
      summary: Get a specific photo
      responses:
        200:
          description: the photo
          schema:
            properties:
              data:
                type: object
                properties:
                  _meta:
                    $ref: '#/definitions/PhotoMeta'
                  item:
                    $ref: '#/definitions/Photo'
              auth:
                $ref: '#/definitions/AuthToken'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'

  # ************************** Matches

  /profiles/:profile_uuid/matches:
    get:
      tags:
        - Matches
      summary: Get matches for profile
      responses:
        200:
          description: List of matches
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  _meta:
                    type: object
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        match_info:
                          $ref: '#/definitions/Match'
                        matched_profile:
                          $ref: '#/definitions/Profile'
                        match_conversation:
                          $ref: '#/definitions/Conversation'
              auth:
                $ref: '#/definitions/AuthToken'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        404:
          description: No matches found
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
    patch:
      tags:
        - Matches
      summary: Bulk update a list of matches
      parameters:
        - name: body
          in: body
          required: true
          description: match properties
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  type: object
                  required:
                    - decision
                  properties:
                    id:
                      type: integer
                      description: match id
                    decision:
                      type: string
                      enum:
                        - Pass
                        - Like
      responses:
        200:
          description: All matches updated
          schema:
            type: object
            properties:
              auth:
                $ref: '#/definitions/AuthToken'
        400:
          description: One or more match updates failed
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    match_id:
                      type: integer
                      format: int64
                    status:
                      type: string
                      enum:
                        - error
                        - success
                    message:
                      type: string
              auth:
                $ref: '#/definitions/AuthToken'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
  /profiles/:profile_uuid/matches/:id:
    get:
      tags:
        - Matches
      summary: Get a specific match
      responses:
        200:
          description: Returns the match data
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  _meta:
                    type: object
                  match_info:
                    $ref: '#/definitions/Match'
                  matched_profile:
                    $ref: '#/definitions/Profile'
                  match_conversation:
                    $ref: '#/definitions/Conversation'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        404:
          description: Match not found
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
    patch:
      tags:
        - Matches
      summary: Update a specific match
      parameters:
        - name: body
          in: body
          required: true
          description: match properties
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
                required:
                  - decision
                properties:
                  decision:
                    type: string
                    enum:
                      - Pass
                      - Like
      responses:
        200:
          description: Match updated
          schema:
            type: object
            properties:
              auth:
                $ref: '#/definitions/AuthToken'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        404:
          description: Match not found
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
    delete:
      tags:
        - Matches
      summary: Umatch
      parameters:
        - name: body
          in: body
          required: true
          description: reason to unmatch
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
                required:
                  - reason
                properties:
                  reason:
                    type: string
      responses:
        200:
          description: Successfully unmatched
          schema:
            type: object
            properties:
              auth:
                $ref: '#/definitions/AuthToken'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        404:
          description: Match not found
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
  /profiles/:profile_uuid/conversations/:id:
    patch:
      tags:
        - Conversations
      summary: Add to a specific conversation
      parameters:
        - name: body
          in: body
          required: true
          description: conversation properties
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
                required:
                  - content
                properties:
                  content:
                    type: string
      responses:
        200:
          description: successfully started a new conversation
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/Conversation'
              auth:
                $ref: '#/definitions/AuthToken'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        404:
          description: Profile not found
          schema:
            $ref: '#/definitions/404'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
  /profiles/:profile_uuid/conversations/:id/health:
    post:
      tags:
        - Conversations
      summary: Update how the conversation is going
      description: Update how the conversation is going
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
                required:
                  - value
                properties:
                  value:
                    type: string
                    enum:
                      - Conversation fizzled
                      - It's going okay
                      - Going good
                      - Great!
      responses:
        200:
          description: successfully updated conversation check
          schema:
            $ref: '#/definitions/200_nodata'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
  /profiles/:profile_uuid/conversations/:id/ready-to-meet:
    post:
      tags:
        - Conversations
      summary: Record if the user is ready to meet
      description: Record if the user is ready to meet
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
                required:
                  - value
                properties:
                  value:
                    type: string
                    enum:
                      - Yes
                      - Not Yet
      responses:
        200:
          description: successfully recorded if user is ready to meet
          schema:
            $ref: '#/definitions/200_nodata'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'
  /profiles/:profile_uuid/conversations/:id/date-suggestions:
    get:
      tags:
        - Conversations
      summary: Returns a list of date date-suggestions
      description: Returns a list of date date-suggestions
      responses:
        200:
          description: list of date date suggestions
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/DateSuggestion'
        401:
          description: Not authenticated
          schema:
            $ref: '#/definitions/401'
        403:
          description: Forbidden. User unauthorized to perform this operation.
          schema:
            $ref: '#/definitions/403'
        500:
          description: Server error
          schema:
            $ref: '#/definitions/500'

# *********************** DEFINITIONS ****************************

definitions:
  Profile:
    type: object
    description: Profile object. The properties `uuid` are read-only.
    properties:
      uuid:
        description: profile uuid
        type: string
        format: uuid
        readOnly: true
      email:
        description: email address
        type: string
        format: email
        readOnly: true
      firstname:
        description: first name
        type: string
        readOnly: true
      lastname:
        description: last name
        type: string
        readOnly: true
      age:
        description: age
        type: integer
        readOnly: true
        format: int32
        minimum: 21
        maximum: 99
      born_on_year:
        type: integer
        format: int32
      born_on_month:
        type: integer
        format: int32
      born_on_day:
        type: integer
        format: int32
      gender:
        description: gender
        type: string
        readOnly: true
        enum:
          - Male
          - Female
      intent:
        type: string
        description: user's dating intention
        enum:
          - Dating
          - Relationship
      intent_text:
        type: string
        description: string to display in the profile for intention
      height:
        description: height
        type: string
        enum:
          - 4'0"
          - 4'1"
          - 4'2"
          - 4'3"
          - 4'4"
          - 4'5"
          - 4'6"
          - 4'7"
          - 4'8"
          - 4'9"
          - 4'10"
          - 4'11"
          - 5'
          - 5'1"
          - 5'2"
          - 5'3"
          - 5'4"
          - 5'5"
          - 5'6"
          - 5'7"
          - 5'8"
          - 5'9"
          - 5'10"
          - 5'11"
          - 6'
          - 6'1"
          - 6'2"
          - 6'3"
          - 6'4"
          - 6'5"
          - 6'6"
          - 6'7"
          - 6'8"
          - 6'9"
      profession:
        description: occupation
        type: string
        maximum: 50
      highest_degree:
        description: highest degree
        type: string
        enum:
          - Bachelors
          - Masters
          - Doctorate
      schools_attended:
        description: list of colleges
        type: array
        items:
          type: string
      faith:
        description: faith/religion/belief
        type: string
        enum:
          - Agnostic
          - Atheist
          - Baha'i
          - Buddhist
          - Christian
          - Hindu
          - Jain
          - Muslim
          - Sikh
          - Spiritual
          - Zoroastrian
          - Other
      date_preferences:
        description: list of user's date preferences
        type: array
        items:
          type: string
      state:
        description: user's app state
        type: string
      incomplete:
        description: is the user's profile incomplete?
        type: boolean
      incomplete_fields:
        description: which fields of the profile are incomplete?
        type: array
        items:
          type: string
      last_known_latitude:
        description: current/last known latitude
        type: number
        format: double
      last_known_longitude:
        description: current/last known longitude
        type: number
        format: double
      location_city:
        description: city name
        type: string
      location_country:
        description: country name
        type: string
      photos:
        type: object
        properties:
          _meta:
            $ref: '#/definitions/PhotoMeta'
          items:
            type: array
            items:
              $ref: '#/definitions/Photo'
  FeaturedProfile:
    type: object
    properties:
      name:
        type: string
        description: name
      age:
        type: integer
        description: age
      profession:
        type: string
        description: profession
      location_city:
        type: string
        description: city name
      questions_and_answers:
        type: array
        items:
          type: object
          properties:
            question:
              type: string
            answer:
              type: string
      photo:
        $ref: '#/definitions/Photo'
  PhotoMeta:
    type: object
    description: meta-data information to show photos
    properties:
      public_host:
        type: string
      transformations:
        type: object
        properties:
          thumbnail:
            description: transformation for thumbnail photos
            type: string
          profile:
            description: transformation for photos on profile view
            type: string
          fullscreen:
            description: transformation for fullscreen photos
            type: string
  Photo:
    type: object
    properties:
      id:
        type: integer
        format: int64
      url:
        type: string
      width:
        type: integer
        format: int32
      height:
        type: integer
        format: int32
      primary:
        type: boolean
        enum:
          - false
          - true
      # sizes:
      #   type: object
      #   properties:
      #     100x100:
      #       type: string
  Message:
    type: object
    properties:
      sender_uuid:
        type: string
        format: uuid
      recipient_uuid:
        type: string
        format: uuid
      content:
        type: string
      sent_at:
        type: string
        format: date-time
      read:
        type: boolean
      read_at:
        type: string
        format: date-time
  Conversation:
    type: object
    properties:
      id:
        type: integer
        format: int64
      uuid:
        type: string
        format: uuid
      messages:
        type: array
        items:
          $ref: '#/definitions/Message'
  Match:
    type: object
    description: Match info
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      for_profile_uuid:
        type: string
        description: profile who this is a match for
        format: uuid
        readOnly: true
      matched_profile_uuid:
        type: string
        description: the matched profile
        format: uuid
        readOnly: true
      expires_at:
        type: string
        format: date-time
        description: date/time this match expires at (iso8601)
        readOnly: true
      created_at:
        type: string
        description: match created date+time (iso8601)
        format: date-time
        readOnly: true
      decision:
        type: string
        description: decision taken
        enum:
          - Pass
          - Like
  DatePlace:
    type: object
    description: Date place
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      street_address:
        type: string
      part_of_city:
        type: string
      city:
        type: string
      price_range:
        type: string
      num_dates:
        type: integer
      photos:
        type: object
        properties:
          _meta:
            $ref: '#/definitions/PhotoMeta'
          public_ids:
            type: array
            items:
              type: string

  DateSuggestion:
    type: object
    description: Date suggestion
    properties:
      day_of_week:
        type: string
      type_of_date:
        type: string
      time_window:
        type: string
      place:
        $ref: '#/definitions/DatePlace'
  State:
    type: object
    description: User state
    properties:
      state:
        type: string
      state_endpoint:
        type: string
  AuthToken:
    type: object
    properties:
      token:
        type: string
        description: auth token (json web token)
      expires_at:
        type: string
        description: auth token expiration DateTime in iso8601 format
        format: date-time
  Error:
    type: object
    properties:
      message:
        type: string
        description: error string
      http_status:
        type: integer
        description: HTTP status code
        format: int32
      code:
        type: string
        description: error code
  200_nodata:
    type: object
    properties:
      data:
        type: object
      auth:
        $ref: '#/definitions/AuthToken'
  400:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
      auth:
        $ref: '#/definitions/AuthToken'
  401:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
      auth:
        $ref: '#/definitions/AuthToken'
  403:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
      auth:
        $ref: '#/definitions/AuthToken'
  404:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
      auth:
        $ref: '#/definitions/AuthToken'
  500:
    type: object
    properties:
      error:
        $ref: '#/definitions/Error'
      auth:
        $ref: '#/definitions/AuthToken'
